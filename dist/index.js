"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.weakModels=weakModels,exports.plugin=void 0;const plugin=async(e,t)=>{if(!t.name)throw new Error("option.name is needed to create new weak Model");if(!t.db)throw new Error("option.db is needed to create new weak Model");const{name:o,db:a}=t,s=[];e.childSchemas.forEach(({schema:e,model:t})=>{t.$isArraySubdocument&&e.set("weakModel")&&s.push({subSchema:e,model:t})}),await Promise.all(s.map(async({subSchema:t,model:s})=>{const{path:n}=s,i=`${o}_${n}`,l=t.set("weakModel");let c;switch(typeof l){case"function":c=await l(t,e,a);break;case"object":c=await l;break;case"boolean":c={}}const{projection:r={},statics:d,methods:p,post:m,extraFields:u,collation:h,position:w,preAggregate:$,postAggregate:b,total:y,set:f,applyPlugins:g=!0}=c,_=o.toLowerCase();if(t=t.clone(),g&&(t.$globalPluginsApplied=!1),t.add({[_]:{...e.tree._id,immutable:!0,name:o,ref:o,filter:!0,pos:0,parent:!0}}),f)for(const e in f)t.set(e,f[e]);t.static({parentPath:_,parentModel(){return this.model(o)}}),w&&t.add({_position:{type:Number,name:"Nº",pos:1}}),y&&t.add({_total:{type:Number,name:"Tº",pos:2}}),Object.keys(r).forEach(o=>{e.path(o)&&1===r[o]&&t.add({[o]:{...e.tree[o],fromParent:!0}})}),t.method("save",(async function(){const e=await this.constructor.model(o).findById(this[_]),t=e[n].id(this._id);return t.set(this),t.$locals=this.$locals,e.$locals=this.$locals,e.save()}),{suppressWarning:!0}),u&&t.add(u),d&&t.static(d),p&&t.method(p),m&&m(t,e,a);const k=e.set("collection")||a.pluralize()(o),M=a.pluralize()(i);let j=[{$project:{[o.toLowerCase()]:"$_id",_id:0,[n]:1,...r,...y?{_total:{$size:"$"+n}}:{}}},{$unwind:{path:"$"+n,includeArrayIndex:"_position",preserveNullAndEmptyArrays:!1}},{$replaceRoot:{newRoot:{$mergeObjects:["$$ROOT","$"+n]}}},{$project:{[n]:0}}];"Human"===w&&j.push({$addFields:{_position:{$add:["$_position",1]}}}),$&&(j=[].concat($,j)),b&&(j=[].concat(j,b));try{await a.connection.dropCollection(M)}finally{await a.connection.createCollection(M,{viewOn:k,pipeline:j,...h?{collation:h}:{}})}a.model(i,t)}))};async function weakModels(e){const{models:t}=e;await Promise.all(Object.keys(t).map(async o=>{await plugin(t[o].schema,{name:o,db:e})}))}exports.plugin=plugin;