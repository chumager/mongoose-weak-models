"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.weakModels=weakModels,exports.plugin=void 0;const plugin=async(e,t)=>{if(!t.name)throw new Error("option.name is needed to create new weak Model");if(!t.db)throw new Error("option.db is needed to create new weak Model");const{name:o,db:i}=t,a=[];e.childSchemas.forEach(({schema:e,model:t})=>{t.$isArraySubdocument&&e.set("weakModel")&&a.push({subSchema:e,model:t})}),await Promise.all(a.map(async({subSchema:t,model:a})=>{const{path:s}=a,n=`${o}_${s}`,l=t.set("weakModel");let r;switch(typeof l){case"function":r=await l(t,e,i);break;case"object":r=await l;break;case"boolean":r={}}const{projection:d={},statics:c,methods:p,post:h,extraFields:m,collation:u,position:w,preAggregate:$,postAggregate:_,total:y,set:f,applyPlugins:b=!0}=r,g=o.toLowerCase();if(t=t.clone(),b&&(t.$globalPluginsApplied=!1),t.add({[g]:{type:e.path("_id").instance,...e.path("_id").options,immutable:!0,name:o,ref:o,filter:!0,pos:0,parent:!0,hidden:!1}}),t.path("_id").options.send=!0,f)for(const e in f)t.set(e,f[e]);t.static({parentPath:g,parentModel(){return this.model(o)}}),w&&t.add({_position:{type:Number,name:"Nº",pos:1}}),y&&t.add({_total:{type:Number,name:"Tº",pos:2}}),Object.keys(d).forEach(o=>{e.path(o)&&1===d[o]&&(t.add(e.pick([o])),t.path(o).options.fromParent=!0)}),t.method("save",(async function(){const e=await this.constructor.model(o).findById(this[g]);let t;if(this._id)t=e[s].id(this._id);else{if(!this._position)throw new Error(`weak model ${n} ain't have _id nor _position\n${JSON.stringify(this,null,2)}`);{const o="Human"===w?this._position-1:this._position;t=e[s][o]}}if(!t)throw new Error(`weak model ${n} doesn't exist, id: ${this._id}, position: ${this._position}`);return t.set(this),t.$locals=this.$locals,e.$locals=this.$locals,e.save()}),{suppressWarning:!0}),m&&t.add(m),c&&t.static(c),p&&t.method(p),h&&h(t,e,i);const k=e.set("collection")||i.pluralize()(o),M=i.pluralize()(n);let j=[{$project:{[o.toLowerCase()]:"$_id",_id:0,[s]:1,...d,...y?{_total:{$size:"$"+s}}:{}}},{$unwind:{path:"$"+s,includeArrayIndex:"_position",preserveNullAndEmptyArrays:!1}},{$replaceRoot:{newRoot:{$mergeObjects:["$$ROOT","$"+s]}}},{$project:{[s]:0}}];"Human"===w&&j.push({$addFields:{_position:{$add:["$_position",1]}}}),$&&(j=[].concat($,j)),_&&(j=[].concat(j,_));try{await i.connection.dropCollection(M)}finally{await i.connection.createCollection(M,{viewOn:k,pipeline:j,...u?{collation:u}:{}})}i.model(n,t)}))};async function weakModels(e){const{models:t}=e;await Promise.all(Object.keys(t).map(async o=>{await plugin(t[o].schema,{name:o,db:e})}))}exports.plugin=plugin;