"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.weakModels=weakModels,exports.plugin=void 0;var _mongooseMutex=_interopRequireDefault(require("@chumager/mongoose-mutex")),_promiseHelpers=require("@chumager/promise-helpers");function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}class localPromise extends Promise{}let lock;_promiseHelpers.functions.delay(localPromise);const plugin=async(e,o)=>{if(!o.name)throw new Error("option.name is needed to create new weak Model");if(!o.db)throw new Error("option.db is needed to create new weak Model");let{name:t}=o;const{db:a}=o,i=[];e.childSchemas.forEach(({schema:e,model:o})=>{o.$isArraySubdocument&&e.set("weakModel")&&i.push({subSchema:e,model:o})}),await Promise.all(i.map(async({subSchema:o,model:i})=>{const{path:s}=i,n=`${t}_${s}`,l=o.set("weakModel");let r;switch(typeof l){case"function":r=await l(o,e,a);break;case"object":r=await l;break;case"boolean":r={}}const{projection:c={},statics:p,methods:d,post:m,extraFields:u,collation:h,position:w,preAggregate:_,postAggregate:$,total:f,set:g,applyPlugins:b=!0,parentName:y}=r,k=t.toLowerCase();if(o=o.clone(),b&&(o.$globalPluginsApplied=!1),o.add({[k]:{type:e.path("_id").instance,...e.path("_id").options,immutable:!0,name:y||t,ref:t,filter:!0,pos:0,tablePos:0,parent:!0,hidden:!1}}),g)for(const e in g)o.set(e,g[e]);o.static({parentPath:k,parentModel(){return this.model(t)}}),w&&o.add({_position:{type:Number,name:"Nº",tablePos:1,pos:1}}),f&&o.add({_total:{type:Number,name:"Tº",tablePos:2,pos:2}}),Object.keys(c).forEach(t=>{e.path(t)&&1===c[t]&&(o.add(e.pick([t])),o.path(t).options.fromParent=!0,o.path(t).options.immutable=!0)}),o.method("save",(async function(){const e=await this.constructor.model(t).findById(this[k]);let o;if(this._id)o=e[s].id(this._id);else{if(!this._position)throw new Error(`weak model ${n} ain't have _id nor _position\n${JSON.stringify(this,null,2)}`);{const t="Human"===w?this._position-1:this._position;o=e[s][t]}}if(!o)throw new Error(`weak model ${n} doesn't exist, id: ${this._id}, position: ${this._position}`);return o.set(this),o.$locals=this.$locals,e.$locals=this.$locals,e.save()}),{suppressWarning:!0}),u&&o.add(u),p&&o.static(p),d&&o.method(d);const P=e.set("collection")||a.pluralize()(t),M=a.pluralize()(n);let x,E=[{$project:{[t.toLowerCase()]:"$_id",_id:0,[s]:1,...c,...f?{_total:{$size:"$"+s}}:{}}},{$unwind:{path:"$"+s,includeArrayIndex:"_position",preserveNullAndEmptyArrays:!1}},{$replaceRoot:{newRoot:{$mergeObjects:["$$ROOT","$"+s]}}},{$project:{[s]:0}}];"Human"===w&&E.push({$addFields:{_position:{$add:["$_position",1]}}}),_&&(E=[].concat(_,E)),$&&(E=[].concat(E,$));try{x=await lock({lockName:M});try{await a.connection.dropCollection(M),console.log("DROP",M)}finally{await a.connection.createCollection(M,{viewOn:P,pipeline:E,...h?{collation:h}:{}}),console.log("CREATE",M)}x&&localPromise.delay(2e4).then(x())}catch(e){console.log("no pude hacer lock para",M)}m&&m(o,e,a),a.model(n,o),await plugin(o,{name:n,db:a})}))};async function weakModels(e){({lock:lock}=(0,_mongooseMutex.default)({db:e,TTL:30}));const{models:o}=e;await Promise.all(Object.keys(o).map(async t=>await plugin(o[t].schema,{name:t,db:e})))}exports.plugin=plugin;