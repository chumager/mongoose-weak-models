"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.weakModels=weakModels,exports.plugin=void 0;var _mongooseMutex=_interopRequireDefault(require("@chumager/mongoose-mutex")),_promiseHelpers=require("@chumager/promise-helpers");function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}class localPromise extends Promise{}let lock;_promiseHelpers.functions.delay(localPromise);const plugin=async(e,t)=>{if(!t.name)throw new Error("option.name is needed to create new weak Model");if(!t.db)throw new Error("option.db is needed to create new weak Model");let{name:o}=t;const{db:a}=t,i=[];e.childSchemas.forEach(({schema:e,model:t})=>{t.$isArraySubdocument&&e.set("weakModel")&&i.push({subSchema:e,model:t})}),await Promise.all(i.map(async({subSchema:t,model:i})=>{const{path:s}=i,n=`${o}_${s}`,l=t.set("weakModel");let r;switch(typeof l){case"function":r=await l(t,e,a);break;case"object":r=await l;break;case"boolean":r={}}const{projection:c={},statics:d,methods:p,post:m,extraFields:u,collation:h,position:w,preAggregate:_,postAggregate:$,total:f,set:b,applyPlugins:y=!0,parentName:g}=r,k=o.toLowerCase();if(t=t.clone(),y&&(t.$globalPluginsApplied=!1),t.add({[k]:{type:e.path("_id").instance,...e.path("_id").options,immutable:!0,name:g||o,ref:o,filter:!0,pos:0,tablePos:0,parent:!0,hidden:!1}}),b)for(const e in b)t.set(e,b[e]);t.static({parentPath:k,parentModel(){return this.model(o)}}),w&&t.add({_position:{type:Number,name:"Nº",tablePos:1,pos:1}}),f&&t.add({_total:{type:Number,name:"Tº",tablePos:2,pos:2}}),Object.keys(c).forEach(o=>{e.path(o)&&1===c[o]&&(t.add(e.pick([o])),t.path(o).options.fromParent=!0,t.path(o).options.immutable=!0)}),t.method("save",(async function(){const e=await this.constructor.model(o).findById(this[k]);let t;if(this._id)t=e[s].id(this._id);else{if(!this._position)throw new Error(`weak model ${n} ain't have _id nor _position\n${JSON.stringify(this,null,2)}`);{const o="Human"===w?this._position-1:this._position;t=e[s][o]}}if(!t)throw new Error(`weak model ${n} doesn't exist, id: ${this._id}, position: ${this._position}`);return t.set(this),t.$locals=this.$locals,e.$locals=this.$locals,e.save()}),{suppressWarning:!0}),u&&t.add(u),d&&t.static(d),p&&t.method(p);const P=e.set("collection")||a.pluralize()(o),M=a.pluralize()(n);let x=[{$project:{[o.toLowerCase()]:"$_id",_id:0,[s]:1,...c,...f?{_total:{$size:"$"+s}}:{}}},{$unwind:{path:"$"+s,includeArrayIndex:"_position",preserveNullAndEmptyArrays:!1}},{$replaceRoot:{newRoot:{$mergeObjects:["$$ROOT","$"+s]}}},{$project:{[s]:0}}];"Human"===w&&x.push({$addFields:{_position:{$add:["$_position",1]}}}),_&&(x=[].concat(_,x)),$&&(x=[].concat(x,$));let j=()=>!0;try{j=await lock({lockName:M});try{await a.connection.dropCollection(M)}finally{await a.connection.createCollection(M,{viewOn:P,pipeline:x,...h?{collation:h}:{}})}localPromise.delay(2e4).then(j())}catch(e){}m&&m(t,e,a),a.model(n,t),await plugin(t,{name:n,db:a})}))};async function weakModels(e){({lock:lock}=(0,_mongooseMutex.default)({db:e,TTL:30}));const{models:t}=e;await Promise.all(Object.keys(t).map(async o=>await plugin(t[o].schema,{name:o,db:e})))}exports.plugin=plugin;